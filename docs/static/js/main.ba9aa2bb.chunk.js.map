{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAEI,sBAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC3CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAAAP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPfG,EAAO,uCAAG,WAAQL,GAAR,uBAAAM,EAAA,6DAEhBC,EAFgB,iDAEiCC,UAAWR,GAF5C,+DAGHS,MAAMF,GAHH,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAcfM,GAde,4CAAH,sDCCVO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEZR,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBxC,OAbAC,qBAAU,WAENvB,EAASL,GACJ6B,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACzB,IAEG0B,EDlB2BK,CAAc/B,GAAlCkB,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,qCACI,oBAAIJ,UAAY,oCAAhB,SAAqDrB,IAEnDyB,GAAW,mBAAGJ,UAAY,mCAAf,yBACb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBgB,EAAe,WAAM,MAGMxC,mBAAS,CAAC,WAHhB,mBAGvByC,EAHuB,KAGX1C,EAHW,KAc9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ0C,EAAWnB,KAAI,SAAAd,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAaA,GADPA,Y,MCxBlCkC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ba9aa2bb.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(category => [ inputValue, ...category]);\n            setInputValue('');\n        }\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","\n   export const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=CtgKdJSfPdUp8n3syxdn1VnUErqUzy4S`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className =\"card animate__animated animate__fadeIn\">\n            <img src ={ url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className = \"animate__animated animate__fadeIn\">{category}</h3>\n\n            { loading && <p className = \"animate__animated animate__flash\"> Loading...</p> }\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [ state, setState ] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=> {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n    return state; // *  regresa { data: [], loading: true }\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n\n    const [categories, setCategories] = useState(['Naruto']);\n\n    // const handleAdd = () => {\n        //* Forma 1 de hacerlo.\n        // setCategories([ ...categories, 'Naruto']);\n\n        //* Forma 2 ( MÃ¡s habitual)\n        // setCategories( category => [ ...category, 'Bleach']);\n    // }\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories= { setCategories }/>\n            <hr />\n\n            {/* <button onClick= { handleAdd }>Agregar</button> */}\n\n            <ol>\n                {\n                    categories.map(category =>\n                         <GifGrid \n                            key ={category}\n                            category = { category }\n                         />\n                    )\n\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}